# Generated by Django 3.0.5 on 2020-04-05 07:27

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import webapp.utils.enums


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_ts', models.DateTimeField(auto_now_add=True)),
                ('last_ts', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[(webapp.utils.enums.AssignmentStatus['PENDING'], 'PENDING'), (webapp.utils.enums.AssignmentStatus['ACCEPTED'], 'ACCEPTED'), (webapp.utils.enums.AssignmentStatus['ENROUTE'], 'ENROUTE'), (webapp.utils.enums.AssignmentStatus['ONSITE'], 'ONSITE'), (webapp.utils.enums.AssignmentStatus['COMPLETE'], 'COMPLETE')], max_length=10)),
                ('created_ts', models.DateTimeField(auto_now_add=True)),
                ('last_ts', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CorpsMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefix', models.CharField(max_length=10)),
                ('first_name', models.CharField(max_length=30)),
                ('middle_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('suffix', models.CharField(max_length=10)),
                ('address1', models.TextField()),
                ('address2', models.TextField()),
                ('city', models.CharField(max_length=30)),
                ('state', models.CharField(choices=[(webapp.utils.enums.USStates['AL'], 'Alabama'), (webapp.utils.enums.USStates['AK'], 'Alaska'), (webapp.utils.enums.USStates['AZ'], 'Arizona'), (webapp.utils.enums.USStates['AR'], 'Arkansas'), (webapp.utils.enums.USStates['CA'], 'California'), (webapp.utils.enums.USStates['CO'], 'Colorado'), (webapp.utils.enums.USStates['DC'], 'District of Columbia'), (webapp.utils.enums.USStates['NC'], 'North Carolina'), (webapp.utils.enums.USStates['CT'], 'Connecticut'), (webapp.utils.enums.USStates['DE'], 'Delaware'), (webapp.utils.enums.USStates['FL'], 'Florida'), (webapp.utils.enums.USStates['GA'], 'Georgia'), (webapp.utils.enums.USStates['HI'], 'Hawaii'), (webapp.utils.enums.USStates['ID'], 'Idaho'), (webapp.utils.enums.USStates['IL'], 'Illinois'), (webapp.utils.enums.USStates['IN'], 'Indiana'), (webapp.utils.enums.USStates['IA'], 'Iowa'), (webapp.utils.enums.USStates['KS'], 'Kansas'), (webapp.utils.enums.USStates['KY'], 'Kentucky'), (webapp.utils.enums.USStates['LA'], 'Louisiana'), (webapp.utils.enums.USStates['ME'], 'Maine'), (webapp.utils.enums.USStates['MD'], 'Maryland'), (webapp.utils.enums.USStates['MA'], 'Massachusetts'), (webapp.utils.enums.USStates['MI'], 'Michigan'), (webapp.utils.enums.USStates['MN'], 'Minnesota'), (webapp.utils.enums.USStates['MS'], 'Mississippi'), (webapp.utils.enums.USStates['MO'], 'Missouri'), (webapp.utils.enums.USStates['MT'], 'Montana'), (webapp.utils.enums.USStates['NE'], 'Nebraska'), (webapp.utils.enums.USStates['NV'], 'Nevada'), (webapp.utils.enums.USStates['NH'], 'New Hampshire'), (webapp.utils.enums.USStates['NJ'], 'New Jersey'), (webapp.utils.enums.USStates['NM'], 'New Mexico'), (webapp.utils.enums.USStates['NY'], 'New York'), (webapp.utils.enums.USStates['ND'], 'North Dakota'), (webapp.utils.enums.USStates['OH'], 'Ohio'), (webapp.utils.enums.USStates['OK'], 'Oklahoma'), (webapp.utils.enums.USStates['OR'], 'Oregon'), (webapp.utils.enums.USStates['PA'], 'Pennsylvania'), (webapp.utils.enums.USStates['RI'], 'Rhode Island'), (webapp.utils.enums.USStates['SC'], 'South Carolina'), (webapp.utils.enums.USStates['SD'], 'South Dakota'), (webapp.utils.enums.USStates['TN'], 'Tennessee'), (webapp.utils.enums.USStates['TX'], 'Texas'), (webapp.utils.enums.USStates['UT'], 'Utah'), (webapp.utils.enums.USStates['VT'], 'Vermont'), (webapp.utils.enums.USStates['VA'], 'Virginia'), (webapp.utils.enums.USStates['WA'], 'Washington'), (webapp.utils.enums.USStates['WV'], 'West Virginia'), (webapp.utils.enums.USStates['WI'], 'Wisconsin'), (webapp.utils.enums.USStates['WY'], 'Wyoming')], max_length=2)),
                ('zipcode', models.CharField(max_length=5)),
                ('active', models.BooleanField(default=True)),
                ('created_ts', models.DateTimeField(auto_now_add=True)),
                ('last_ts', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('address1', models.TextField()),
                ('address2', models.TextField()),
                ('city', models.CharField(max_length=30)),
                ('state', models.CharField(choices=[(webapp.utils.enums.USStates['AL'], 'Alabama'), (webapp.utils.enums.USStates['AK'], 'Alaska'), (webapp.utils.enums.USStates['AZ'], 'Arizona'), (webapp.utils.enums.USStates['AR'], 'Arkansas'), (webapp.utils.enums.USStates['CA'], 'California'), (webapp.utils.enums.USStates['CO'], 'Colorado'), (webapp.utils.enums.USStates['DC'], 'District of Columbia'), (webapp.utils.enums.USStates['NC'], 'North Carolina'), (webapp.utils.enums.USStates['CT'], 'Connecticut'), (webapp.utils.enums.USStates['DE'], 'Delaware'), (webapp.utils.enums.USStates['FL'], 'Florida'), (webapp.utils.enums.USStates['GA'], 'Georgia'), (webapp.utils.enums.USStates['HI'], 'Hawaii'), (webapp.utils.enums.USStates['ID'], 'Idaho'), (webapp.utils.enums.USStates['IL'], 'Illinois'), (webapp.utils.enums.USStates['IN'], 'Indiana'), (webapp.utils.enums.USStates['IA'], 'Iowa'), (webapp.utils.enums.USStates['KS'], 'Kansas'), (webapp.utils.enums.USStates['KY'], 'Kentucky'), (webapp.utils.enums.USStates['LA'], 'Louisiana'), (webapp.utils.enums.USStates['ME'], 'Maine'), (webapp.utils.enums.USStates['MD'], 'Maryland'), (webapp.utils.enums.USStates['MA'], 'Massachusetts'), (webapp.utils.enums.USStates['MI'], 'Michigan'), (webapp.utils.enums.USStates['MN'], 'Minnesota'), (webapp.utils.enums.USStates['MS'], 'Mississippi'), (webapp.utils.enums.USStates['MO'], 'Missouri'), (webapp.utils.enums.USStates['MT'], 'Montana'), (webapp.utils.enums.USStates['NE'], 'Nebraska'), (webapp.utils.enums.USStates['NV'], 'Nevada'), (webapp.utils.enums.USStates['NH'], 'New Hampshire'), (webapp.utils.enums.USStates['NJ'], 'New Jersey'), (webapp.utils.enums.USStates['NM'], 'New Mexico'), (webapp.utils.enums.USStates['NY'], 'New York'), (webapp.utils.enums.USStates['ND'], 'North Dakota'), (webapp.utils.enums.USStates['OH'], 'Ohio'), (webapp.utils.enums.USStates['OK'], 'Oklahoma'), (webapp.utils.enums.USStates['OR'], 'Oregon'), (webapp.utils.enums.USStates['PA'], 'Pennsylvania'), (webapp.utils.enums.USStates['RI'], 'Rhode Island'), (webapp.utils.enums.USStates['SC'], 'South Carolina'), (webapp.utils.enums.USStates['SD'], 'South Dakota'), (webapp.utils.enums.USStates['TN'], 'Tennessee'), (webapp.utils.enums.USStates['TX'], 'Texas'), (webapp.utils.enums.USStates['UT'], 'Utah'), (webapp.utils.enums.USStates['VT'], 'Vermont'), (webapp.utils.enums.USStates['VA'], 'Virginia'), (webapp.utils.enums.USStates['WA'], 'Washington'), (webapp.utils.enums.USStates['WV'], 'West Virginia'), (webapp.utils.enums.USStates['WI'], 'Wisconsin'), (webapp.utils.enums.USStates['WY'], 'Wyoming')], max_length=2)),
                ('zipcode', models.CharField(max_length=5)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('created_ts', models.DateTimeField(auto_now_add=True)),
                ('last_ts', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LocationContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefix', models.CharField(max_length=10)),
                ('first_name', models.CharField(max_length=30)),
                ('middle_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('suffix', models.CharField(max_length=10)),
                ('created_ts', models.DateTimeField(auto_now_add=True)),
                ('last_ts', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.Location')),
            ],
        ),
        migrations.CreateModel(
            name='LocationContactPhoneNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sms_ok', models.BooleanField()),
                ('value', models.CharField(max_length=20)),
                ('preferred', models.BooleanField()),
                ('active', models.BooleanField(default=True)),
                ('created_ts', models.DateTimeField(auto_now_add=True)),
                ('last_ts', models.DateTimeField(auto_now=True)),
                ('location_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.LocationContact')),
            ],
        ),
        migrations.CreateModel(
            name='LocationContactEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.EmailField(max_length=254)),
                ('preferred', models.BooleanField()),
                ('active', models.BooleanField(default=True)),
                ('created_ts', models.DateTimeField(auto_now_add=True)),
                ('last_ts', models.DateTimeField(auto_now=True)),
                ('location_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.LocationContact')),
            ],
        ),
        migrations.CreateModel(
            name='Deployment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('members_needed', models.IntegerField()),
                ('description', models.TextField()),
                ('created_ts', models.DateTimeField(auto_now_add=True)),
                ('last_ts', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.Location')),
            ],
        ),
        migrations.CreateModel(
            name='CorpsMemberPhoneNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sms_ok', models.BooleanField()),
                ('value', models.CharField(max_length=20)),
                ('preferred', models.BooleanField()),
                ('active', models.BooleanField(default=True)),
                ('created_ts', models.DateTimeField(auto_now_add=True)),
                ('last_ts', models.DateTimeField(auto_now=True)),
                ('corpsmember', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.CorpsMember')),
            ],
        ),
        migrations.CreateModel(
            name='CorpsMemberEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.EmailField(max_length=254)),
                ('preferred', models.BooleanField()),
                ('active', models.BooleanField(default=True)),
                ('created_ts', models.DateTimeField(auto_now_add=True)),
                ('last_ts', models.DateTimeField(auto_now=True)),
                ('corpsmember', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.CorpsMember')),
            ],
        ),
        migrations.AddField(
            model_name='corpsmember',
            name='deployments',
            field=models.ManyToManyField(through='webapp.Assignment', to='webapp.Deployment'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='corpsmember',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='webapp.CorpsMember'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='deployment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='webapp.Deployment'),
        ),
    ]
